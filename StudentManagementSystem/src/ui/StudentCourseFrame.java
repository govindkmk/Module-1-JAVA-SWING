/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import dbmanager.CourseDbManager;
import dbmanager.StudentCourseDbManager;
import dbmanager.StudentDbManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Course;
import models.Student;
import models.StudentCourse;

/**
 *
 * @author Govind Kumar
 */
public class StudentCourseFrame extends javax.swing.JFrame {

    /**
     * Creates new form StudentCourseFrame
     */
    public StudentCourseFrame() {
        initComponents();
        fillStudentCoursesTable();
        fillStudentRollNumberCombox();
        fillCourseNameCombox();
        clearFields();
    }

    StudentCourseDbManager studentCourseDbManager = new StudentCourseDbManager();
    StudentDbManager studentDbManager = new StudentDbManager();
    CourseDbManager courseDbManager = new CourseDbManager();

    String columns[] = {"Id", "Roll Number", "Course Name", "Obtained Marks"};
    DefaultTableModel studentCourseDefaultTableModel;
    Integer studentCourseid = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        studentCourseLabel = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        studentNameLabel = new javax.swing.JLabel();
        courseLabel = new javax.swing.JLabel();
        obtainedMarksLabel = new javax.swing.JLabel();
        assignCourseButton = new javax.swing.JButton();
        updateMarksButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentCourseTable = new javax.swing.JTable();
        courseComboBox = new javax.swing.JComboBox<>();
        obtaineMarksSpinner = new javax.swing.JSpinner();
        studentCombox = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(350, 150));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        studentCourseLabel.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        studentCourseLabel.setText("Student Course CRUD");

        homeButton.setBackground(new java.awt.Color(255, 204, 204));
        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        logoutButton.setBackground(new java.awt.Color(255, 204, 204));
        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        studentNameLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        studentNameLabel.setText("Student Roll Number");

        courseLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        courseLabel.setText("Course Name");

        obtainedMarksLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        obtainedMarksLabel.setText("Obtained Marks");

        assignCourseButton.setBackground(new java.awt.Color(204, 204, 255));
        assignCourseButton.setText("Assign Course");
        assignCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignCourseButtonActionPerformed(evt);
            }
        });

        updateMarksButton.setBackground(new java.awt.Color(204, 204, 255));
        updateMarksButton.setText("Update Marks");
        updateMarksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMarksButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(204, 204, 255));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        studentCourseTable.setBackground(new java.awt.Color(204, 153, 255));
        studentCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        studentCourseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentCourseTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(studentCourseTable);

        courseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Course Name--" }));

        studentCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Roll Number--" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169)
                .addComponent(studentCourseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(assignCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(updateMarksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(obtainedMarksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(courseComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentCombox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(obtaineMarksSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentCourseLabel)
                    .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNameLabel)
                    .addComponent(studentCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseLabel)
                    .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(obtaineMarksSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(obtainedMarksLabel))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateMarksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fillStudentCoursesTable() {
        studentCourseDefaultTableModel = new DefaultTableModel(columns, 0);
        List<StudentCourse> studentCourses;
        try {
            studentCourses = studentCourseDbManager.getStudentCourses();
            for (StudentCourse studentCourse : studentCourses) {
                Object row[] = {studentCourse.getId(), studentCourse.getStudent().getRollNumber(), studentCourse.getCourse().getCourseName(), studentCourse.getObtained_marks()};
                studentCourseDefaultTableModel.addRow(row);
                studentCourseTable.setModel(studentCourseDefaultTableModel);
            }

            studentCourseTable.getColumnModel().getColumn(0).setWidth(0);
            studentCourseTable.getColumnModel().getColumn(0).setMinWidth(0);
            studentCourseTable.getColumnModel().getColumn(0).setMaxWidth(0);
        } catch (SQLException ex) {
            Logger.getLogger(StudentCourseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void fillStudentRollNumberCombox() {
        List<Student> students;
        try {
            students = studentDbManager.getAllStudents();
            for (Student student : students) {
                studentCombox.addItem(student.getRollNumber());
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentCourseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void fillCourseNameCombox() {
        try {
            List<Course> courses = courseDbManager.getAllCourses();
            for (Course course : courses) {
                courseComboBox.addItem(course.getCourseName());
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentCourseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private StudentCourse getStudentCourses() {

        StudentCourse studentCourse = new StudentCourse();
        try {

            String rollNumber = studentCombox.getSelectedItem().toString();
            String courseName = courseComboBox.getSelectedItem().toString();
            Integer obtainedMarks = Integer.parseInt(obtaineMarksSpinner.getValue().toString());

            Student student = studentDbManager.getStudentByRollNumber(rollNumber);
            Course course = courseDbManager.getCourseByName(courseName);

            if (student != null && course != null) {
                studentCourse.setStudent(student);
                studentCourse.setCourse(course);
                studentCourse.setObtained_marks(obtainedMarks);
            } else {
                // Handle the case when student or course is null
                // You can show an error message or take appropriate action here
                JOptionPane.showMessageDialog(this, "Student or Course not found.");
                
            }
            
                    
//            studentCourse.setStudent(student);
//            studentCourse.setCourse(course);
//            studentCourse.setObtained_marks(obtainedMarks);

        } catch (SQLException ex) {
            Logger.getLogger(StudentCourseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        return studentCourse;
    }

    private void clearFields() {
        studentCombox.setSelectedItem("");
        courseComboBox.setSelectedItem("");
        obtaineMarksSpinner.setValue(0);

    }

    private void assignCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignCourseButtonActionPerformed
        try {
            // TODO add your handling code here:

            boolean success = studentCourseDbManager.assignStudentCourse(getStudentCourses());
            if (success) {
                JOptionPane.showMessageDialog(this, "Course Assign Successsfully...");
                fillStudentCoursesTable();
                clearFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentCourseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_assignCourseButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void updateMarksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMarksButtonActionPerformed
        // TODO add your handling code here:

        StudentCourse studentCourse = this.getStudentCourses();
        studentCourse.setId(studentCourseid);

        try {
            boolean success = studentCourseDbManager.updateStudentMarks(studentCourse);
            if (success) {
                JOptionPane.showMessageDialog(this, "Marks Updated Successfully...");
                fillStudentCoursesTable();
                clearFields();
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentCourseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_updateMarksButtonActionPerformed

    private void studentCourseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentCourseTableMouseClicked
        // TODO add your handling code here:

        studentCourseid = Integer.parseInt(studentCourseTable.getValueAt(studentCourseTable.getSelectedRow(), 0).toString());

        try {
            StudentCourse studentCourse = studentCourseDbManager.getStudentCourseById(studentCourseid);
            Student student = studentDbManager.getStudentByRollNumber(studentCourse.getStudent().getRollNumber());
            studentCombox.setSelectedItem(student.getRollNumber());

            Course course = courseDbManager.getCourseByName(studentCourse.getCourse().getCourseName());
            courseComboBox.setSelectedItem(course.getCourseName());

            obtaineMarksSpinner.setValue(studentCourse.getObtained_marks());

        } catch (SQLException ex) {
            Logger.getLogger(StudentCourseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_studentCourseTableMouseClicked

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        MenuFrame menuFrame = new MenuFrame();
        menuFrame.setVisible(true);
        
    }//GEN-LAST:event_homeButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentCourseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentCourseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentCourseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentCourseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentCourseFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignCourseButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> courseComboBox;
    private javax.swing.JLabel courseLabel;
    private javax.swing.JButton homeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JSpinner obtaineMarksSpinner;
    private javax.swing.JLabel obtainedMarksLabel;
    private javax.swing.JComboBox<String> studentCombox;
    private javax.swing.JLabel studentCourseLabel;
    private javax.swing.JTable studentCourseTable;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JButton updateMarksButton;
    // End of variables declaration//GEN-END:variables
}
